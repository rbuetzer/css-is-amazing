:root {
    --maze-cell-size: calc(0.1 * min(100vh, 100vw));
    --wall-height: var(--maze-cell-size);

    --maze-size: 13;
    /* set this to floor(var(--maze-size)) -> read the last bit of --maze-size to see if it is even or odd */
    --center-wall-offset: 6;
}

body {
    height: 1vh;
    overflow: hidden;
    font-family: sans-serif;
}

.init-vars {
    --max-offset: calc(var(--maze-size) - 1);
    --is-north-border: calc((-1 * min(var(--offset-y), 1) + 1) * var(--is-north));
    --is-west-border: calc((-1 * min(var(--offset-x), 1) + 1) * var(--is-west));
    --is-east-border: calc(max(0, min(1, calc(var(--offset-x) - var(--max-offset) + 1))) * var(--is-east));
    --is-south-border: calc(max(0, min(1, calc(var(--offset-y) - var(--max-offset) + 1))) * var(--is-south));
    --is-any-border: calc(var(--is-north-border) + var(--is-west-border) + var(--is-east-border) + var(--is-south-border));
    --is-not-border: calc(-1 * var(--is-any-border) + 1);

    --maze-width: calc(var(--maze-cell-size) * var(--maze-size));
    --maze-height: calc(var(--maze-cell-size) * var(--maze-size));
    
    --is-first-person-view: calc(1 - var(--is-birdeye));
}


/**
 * DEBUG
 */

.debug-border::before {
    counter-set: debug calc(var(--is-any-border, 99) + 1);
    content: "Is border: " counter(debug, boolean);
}